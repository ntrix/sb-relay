{"version":3,"file":"useBreakpoints.c2c84698.js","sources":["../../node_modules/@mui/material/useMediaQuery/useMediaQuery.js","../../app/hooks/useBreakpoints.ts"],"sourcesContent":["import * as React from 'react';\nimport { getThemeProps, useThemeWithoutDefault as useTheme } from '@mui/system';\nimport useEnhancedEffect from '../utils/useEnhancedEffect';\n/**\n * @deprecated Not used internally. Use `MediaQueryListEvent` from lib.dom.d.ts instead.\n */\n\nfunction useMediaQueryOld(query, defaultMatches, matchMedia, ssrMatchMedia, noSsr) {\n  const supportMatchMedia = typeof window !== 'undefined' && typeof window.matchMedia !== 'undefined';\n  const [match, setMatch] = React.useState(() => {\n    if (noSsr && supportMatchMedia) {\n      return matchMedia(query).matches;\n    }\n\n    if (ssrMatchMedia) {\n      return ssrMatchMedia(query).matches;\n    } // Once the component is mounted, we rely on the\n    // event listeners to return the correct matches value.\n\n\n    return defaultMatches;\n  });\n  useEnhancedEffect(() => {\n    let active = true;\n\n    if (!supportMatchMedia) {\n      return undefined;\n    }\n\n    const queryList = matchMedia(query);\n\n    const updateMatch = () => {\n      // Workaround Safari wrong implementation of matchMedia\n      // TODO can we remove it?\n      // https://github.com/mui/material-ui/pull/17315#issuecomment-528286677\n      if (active) {\n        setMatch(queryList.matches);\n      }\n    };\n\n    updateMatch(); // TODO: Use `addEventListener` once support for Safari < 14 is dropped\n\n    queryList.addListener(updateMatch);\n    return () => {\n      active = false;\n      queryList.removeListener(updateMatch);\n    };\n  }, [query, matchMedia, supportMatchMedia]);\n  return match;\n} // eslint-disable-next-line no-useless-concat -- Workaround for https://github.com/webpack/webpack/issues/14814\n\n\nconst maybeReactUseSyncExternalStore = React['useSyncExternalStore' + ''];\n\nfunction useMediaQueryNew(query, defaultMatches, matchMedia, ssrMatchMedia) {\n  const getDefaultSnapshot = React.useCallback(() => defaultMatches, [defaultMatches]);\n  const getServerSnapshot = React.useMemo(() => {\n    if (ssrMatchMedia !== null) {\n      const {\n        matches\n      } = ssrMatchMedia(query);\n      return () => matches;\n    }\n\n    return getDefaultSnapshot;\n  }, [getDefaultSnapshot, query, ssrMatchMedia]);\n  const [getSnapshot, subscribe] = React.useMemo(() => {\n    if (matchMedia === null) {\n      return [getDefaultSnapshot, () => () => {}];\n    }\n\n    const mediaQueryList = matchMedia(query);\n    return [() => mediaQueryList.matches, notify => {\n      // TODO: Use `addEventListener` once support for Safari < 14 is dropped\n      mediaQueryList.addListener(notify);\n      return () => {\n        mediaQueryList.removeListener(notify);\n      };\n    }];\n  }, [getDefaultSnapshot, matchMedia, query]);\n  const match = maybeReactUseSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);\n  return match;\n}\n\nexport default function useMediaQuery(queryInput, options = {}) {\n  const theme = useTheme(); // Wait for jsdom to support the match media feature.\n  // All the browsers MUI support have this built-in.\n  // This defensive check is here for simplicity.\n  // Most of the time, the match media logic isn't central to people tests.\n\n  const supportMatchMedia = typeof window !== 'undefined' && typeof window.matchMedia !== 'undefined';\n  const {\n    defaultMatches = false,\n    matchMedia = supportMatchMedia ? window.matchMedia : null,\n    ssrMatchMedia = null,\n    noSsr\n  } = getThemeProps({\n    name: 'MuiUseMediaQuery',\n    props: options,\n    theme\n  });\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof queryInput === 'function' && theme === null) {\n      console.error(['MUI: The `query` argument provided is invalid.', 'You are providing a function without a theme in the context.', 'One of the parent elements needs to use a ThemeProvider.'].join('\\n'));\n    }\n  }\n\n  let query = typeof queryInput === 'function' ? queryInput(theme) : queryInput;\n  query = query.replace(/^@media( ?)/m, ''); // TODO: Drop `useMediaQueryOld` and use  `use-sync-external-store` shim in `useMediaQueryNew` once the package is stable\n\n  const useMediaQueryImplementation = maybeReactUseSyncExternalStore !== undefined ? useMediaQueryNew : useMediaQueryOld;\n  const match = useMediaQueryImplementation(query, defaultMatches, matchMedia, ssrMatchMedia, noSsr);\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useDebugValue({\n      query,\n      match\n    });\n  }\n\n  return match;\n}","import { useMediaQuery, useTheme } from '@mui/material';\n\nexport function useMobile(): boolean {\n\tconst theme = useTheme();\n\treturn useMediaQuery(theme.breakpoints.down('mobile'));\n}\n"],"names":["useMediaQueryOld","query","defaultMatches","matchMedia","ssrMatchMedia","noSsr","supportMatchMedia","match","setMatch","React.useState","useEnhancedEffect","active","queryList","updateMatch","__name","maybeReactUseSyncExternalStore","React","useMediaQueryNew","getDefaultSnapshot","React.useCallback","getServerSnapshot","React.useMemo","matches","getSnapshot","subscribe","mediaQueryList","notify","useMediaQuery","queryInput","options","theme","useTheme","getThemeProps","useMobile"],"mappings":"0RAOA,SAASA,EAAiBC,EAAOC,EAAgBC,EAAYC,EAAeC,EAAO,CACjF,MAAMC,EAAoB,OAAO,OAAW,KAAe,OAAO,OAAO,WAAe,IAClF,CAACC,EAAOC,CAAQ,EAAIC,EAAc,QAAA,SAAC,IACnCJ,GAASC,EACJH,EAAWF,CAAK,EAAE,QAGvBG,EACKA,EAAcH,CAAK,EAAE,QAKvBC,CACR,EACD,OAAAQ,EAAkB,IAAM,CACtB,IAAIC,EAAS,GAEb,GAAI,CAACL,EACH,OAGF,MAAMM,EAAYT,EAAWF,CAAK,EAE5BY,EAAcC,EAAA,IAAM,CAIpBH,GACFH,EAASI,EAAU,OAAO,CAElC,EAPwB,eASpB,OAAAC,IAEAD,EAAU,YAAYC,CAAW,EAC1B,IAAM,CACXF,EAAS,GACTC,EAAU,eAAeC,CAAW,CAC1C,CACG,EAAE,CAACZ,EAAOE,EAAYG,CAAiB,CAAC,EAClCC,CACT,CA1CSO,EAAAd,EAAA,oBA6CT,MAAMe,EAAiCC,EAAM,wBAE7C,SAASC,EAAiBhB,EAAOC,EAAgBC,EAAYC,EAAe,CAC1E,MAAMc,EAAqBC,EAAAA,QAAAA,YAAkB,IAAMjB,EAAgB,CAACA,CAAc,CAAC,EAC7EkB,EAAoBC,EAAAA,QAAAA,QAAc,IAAM,CAC5C,GAAIjB,IAAkB,KAAM,CAC1B,KAAM,CACJ,QAAAkB,CACR,EAAUlB,EAAcH,CAAK,EACvB,MAAO,IAAMqB,CACd,CAED,OAAOJ,CACR,EAAE,CAACA,EAAoBjB,EAAOG,CAAa,CAAC,EACvC,CAACmB,EAAaC,CAAS,EAAIH,EAAa,QAAA,QAAC,IAAM,CACnD,GAAIlB,IAAe,KACjB,MAAO,CAACe,EAAoB,IAAM,IAAM,CAAA,CAAE,EAG5C,MAAMO,EAAiBtB,EAAWF,CAAK,EACvC,MAAO,CAAC,IAAMwB,EAAe,QAASC,IAEpCD,EAAe,YAAYC,CAAM,EAC1B,IAAM,CACXD,EAAe,eAAeC,CAAM,CAC5C,EACK,CACF,EAAE,CAACR,EAAoBf,EAAYF,CAAK,CAAC,EAE1C,OADcc,EAA+BS,EAAWD,EAAaH,CAAiB,CAExF,CA5BSN,EAAAG,EAAA,oBA8BM,SAASU,EAAcC,EAAYC,EAAU,GAAI,CAC9D,MAAMC,EAAQC,IAKRzB,EAAoB,OAAO,OAAW,KAAe,OAAO,OAAO,WAAe,IAClF,CACJ,eAAAJ,EAAiB,GACjB,WAAAC,EAAaG,EAAoB,OAAO,WAAa,KACrD,cAAAF,EAAgB,KAChB,MAAAC,CACD,EAAG2B,EAAc,CAChB,KAAM,mBACN,MAAOH,EACP,MAAAC,CACJ,CAAG,EAQD,IAAI7B,EAAQ,OAAO2B,GAAe,WAAaA,EAAWE,CAAK,EAAIF,EACnE,OAAA3B,EAAQA,EAAM,QAAQ,eAAgB,EAAE,GAEJc,IAAmC,OAAYE,EAAmBjB,GAC5DC,EAAOC,EAAgBC,EAAYC,EAAeC,CAAK,CAWnG,CAvCwBS,EAAAa,EAAA,iBClFjB,SAASM,GAAqB,CACpC,MAAMH,EAAQC,IACd,OAAOJ,EAAcG,EAAM,YAAY,KAAK,QAAQ,CAAC,CACtD,CAHgBhB,EAAAmB,EAAA"}