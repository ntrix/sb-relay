var f=Object.defineProperty;var r=(e,o)=>f(e,"name",{value:o,configurable:!0});import{A as h,a as y,P as b}from"./ActionBar.cdb16a43.js";import{j as a,a as m,R as u}from"./jsx-runtime.e33d60e0.js";import{u as g}from"./useTheme.26b62596.js";import{M as k,a as v,b as C,c as D}from"./DialogTitle.db2822a0.js";import"./useThemeProps.cb18d8c8.js";import"./styled.bd1beb39.js";import"./ButtonBase.7b7e8fd4.js";import"./emotion-react.browser.esm.e109c618.js";import"./TransitionGroupContext.97a255f7.js";import"./useForkRef.aea557aa.js";import"./useEnhancedEffect.67846e2c.js";import"./useIsFocusVisible.b2b968b1.js";import"./Box.2f36cd29.js";import"./Typography.417682f0.js";import"./Stack.8bb83f8b.js";import"./iframe.b5197602.js";import"./Modal.a43a6e39.js";import"./index.84bc0df4.js";import"./isHostComponent.c8fe3a80.js";import"./getScrollbarSize.bc370221.js";import"./ownerWindow.08944ff6.js";import"./useId.05e58455.js";import"./Paper.14b44500.js";function _(e,o={}){return t=>a(e,{...o,...t})}r(_,"addDefaultProps");function M(e,o){return t=>{const i=g(),n=o(i);return a(e,{...n,...t})}}r(M,"addDefaultPropsWithTheme");const p=_(C,{fullWidth:!0,maxWidth:"xs"}),c=M(D,e=>({sx:{pb:"4px",[e.breakpoints.up("md")]:{pb:"8px"}}})),d=r(function(o){const{title:t,text:i,primaryAction:n={},secondaryAction:l={},...s}=o;return m(p,{...s,children:[a(k,{children:t}),!!i&&a(v,{children:i}),a(c,{children:a(h,{primaryAsSecondary:!0,primary:{...n,color:(n==null?void 0:n.color)||y.Creative},secondary:{...l,children:(l==null?void 0:l.children)||"Cancel",onClick:s==null?void 0:s.onClose}})})]})},"ConfirmDialog2");try{p.displayName="ConfirmDialogContainer",p.__docgenInfo={description:"",displayName:"ConfirmDialogContainer",props:{ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"Ref<HTMLDivElement>"}},components:{defaultValue:{value:"{}"},description:`The components used for each slot inside the Modal.
Either a string to use a HTML element or a component.`,name:"components",required:!1,type:{name:"{ Root?: ElementType<any>; }"}},componentsProps:{defaultValue:{value:"{}"},description:"The props used for each slot inside the Modal.",name:"componentsProps",required:!1,type:{name:"{ root?: HTMLAttributes<HTMLDivElement> & ModalUnstyledComponentsPropsOverrides; }"}},BackdropComponent:{defaultValue:{value:`styled(Backdrop, {
name: 'MuiModal',
slot: 'Backdrop',
overridesResolver: (props, styles) => {
return styles.backdrop;
},
})({
zIndex: -1,
})`},description:"A backdrop component. This prop enables custom backdrop rendering.",name:"BackdropComponent",required:!1,type:{name:'ElementType<BackdropProps<"div", {}>> & ElementType<any>'}},BackdropProps:{defaultValue:null,description:"Props applied to the [`Backdrop`](/material-ui/api/backdrop/) element.\nProps applied to the backdrop element.",name:"BackdropProps",required:!1,type:{name:'Partial<BackdropProps<"div", {}>> & Pick<DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement>, "key" | keyof HTMLAttributes<...>> & { ...; }'}},closeAfterTransition:{defaultValue:{value:"false"},description:"When set to true the Modal waits until a nested Transition is completed before closing.",name:"closeAfterTransition",required:!1,type:{name:"boolean"}},container:{defaultValue:null,description:"An HTML element or function that returns one.\nThe `container` will have the portal children appended to it.\n\nBy default, it uses the body of the top-level document object,\nso it's simply `document.body` most of the time.",name:"container",required:!1,type:{name:"Element | (() => Element)"}},disableAutoFocus:{defaultValue:{value:"false"},description:"If `true`, the modal will not automatically shift focus to itself when it opens, and\nreplace it to the last focused element when it closes.\nThis also works correctly with any modal children that have the `disableAutoFocus` prop.\n\nGenerally this should never be set to `true` as it makes the modal less\naccessible to assistive technologies, like screen readers.",name:"disableAutoFocus",required:!1,type:{name:"boolean"}},disableEnforceFocus:{defaultValue:{value:"false"},description:"If `true`, the modal will not prevent focus from leaving the modal while open.\n\nGenerally this should never be set to `true` as it makes the modal less\naccessible to assistive technologies, like screen readers.",name:"disableEnforceFocus",required:!1,type:{name:"boolean"}},disablePortal:{defaultValue:{value:"false"},description:"The `children` will be under the DOM hierarchy of the parent component.",name:"disablePortal",required:!1,type:{name:"boolean"}},disableRestoreFocus:{defaultValue:{value:"false"},description:"If `true`, the modal will not restore focus to previously focused element once\nmodal is hidden or unmounted.",name:"disableRestoreFocus",required:!1,type:{name:"boolean"}},disableScrollLock:{defaultValue:{value:"false"},description:"Disable the scroll lock behavior.",name:"disableScrollLock",required:!1,type:{name:"boolean"}},hideBackdrop:{defaultValue:{value:"false"},description:"If `true`, the backdrop is not rendered.",name:"hideBackdrop",required:!1,type:{name:"boolean"}},keepMounted:{defaultValue:{value:"false"},description:`Always keep the children in the DOM.
This prop can be useful in SEO situation or
when you want to maximize the responsiveness of the Modal.`,name:"keepMounted",required:!1,type:{name:"boolean"}}}}}catch{}try{d.displayName="ConfirmDialog",d.__docgenInfo={description:`
Demos:

- [Dialogs](https://mui.com/material-ui/react-dialog/)

API:

- [DialogContent API](https://mui.com/material-ui/api/dialog-content/)`,displayName:"ConfirmDialog",props:{ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"Ref<unknown>"}}}}}catch{}try{c.displayName="ConfirmDialogActions",c.__docgenInfo={description:"",displayName:"ConfirmDialogActions",props:{ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"Ref<unknown>"}}}}}catch{}const K={title:"Components/Dialog",component:d,tags:["docsPage"]},Q=r(e=>{const[o,t]=u.useState(!1),i=r(()=>t(!0),"handleOpen"),n=r(()=>t(!1),"handleClose");return m(u.Fragment,{children:[a(b,{onClick:i,children:"Open dialog"}),a(d,{open:o,onClose:n,title:"Confirm your decision?",primaryAction:{children:"Confirm"}})]})},"ConfirmDialog"),X=["ConfirmDialog"];export{Q as ConfirmDialog,X as __namedExportsOrder,K as default};
//# sourceMappingURL=ConfirmDialog.stories.24920e44.js.map
