{"version":3,"file":"useControlled.97d0b579.js","sources":["../../node_modules/@mui/utils/esm/debounce.js","../../node_modules/@mui/utils/esm/isMuiElement.js","../../node_modules/@mui/utils/esm/useControlled.js"],"sourcesContent":["// Corresponds to 10 frames at 60 Hz.\n// A few bytes payload overhead when lodash/debounce is ~3 kB and debounce ~300 B.\nexport default function debounce(func, wait = 166) {\n  let timeout;\n\n  function debounced(...args) {\n    const later = () => {\n      func.apply(this, args);\n    };\n\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n  }\n\n  debounced.clear = () => {\n    clearTimeout(timeout);\n  };\n\n  return debounced;\n}","import * as React from 'react';\nexport default function isMuiElement(element, muiNames) {\n  return /*#__PURE__*/React.isValidElement(element) && muiNames.indexOf(element.type.muiName) !== -1;\n}","/* eslint-disable react-hooks/rules-of-hooks, react-hooks/exhaustive-deps */\nimport * as React from 'react';\nexport default function useControlled({\n  controlled,\n  default: defaultProp,\n  name,\n  state = 'value'\n}) {\n  // isControlled is ignored in the hook dependency lists as it should never change.\n  const {\n    current: isControlled\n  } = React.useRef(controlled !== undefined);\n  const [valueState, setValue] = React.useState(defaultProp);\n  const value = isControlled ? controlled : valueState;\n\n  if (process.env.NODE_ENV !== 'production') {\n    React.useEffect(() => {\n      if (isControlled !== (controlled !== undefined)) {\n        console.error([`MUI: A component is changing the ${isControlled ? '' : 'un'}controlled ${state} state of ${name} to be ${isControlled ? 'un' : ''}controlled.`, 'Elements should not switch from uncontrolled to controlled (or vice versa).', `Decide between using a controlled or uncontrolled ${name} ` + 'element for the lifetime of the component.', \"The nature of the state is determined during the first render. It's considered controlled if the value is not `undefined`.\", 'More info: https://fb.me/react-controlled-components'].join('\\n'));\n      }\n    }, [state, name, controlled]);\n    const {\n      current: defaultValue\n    } = React.useRef(defaultProp);\n    React.useEffect(() => {\n      if (!isControlled && defaultValue !== defaultProp) {\n        console.error([`MUI: A component is changing the default ${state} state of an uncontrolled ${name} after being initialized. ` + `To suppress this warning opt to use a controlled ${name}.`].join('\\n'));\n      }\n    }, [JSON.stringify(defaultProp)]);\n  }\n\n  const setValueIfUncontrolled = React.useCallback(newValue => {\n    if (!isControlled) {\n      setValue(newValue);\n    }\n  }, []);\n  return [value, setValueIfUncontrolled];\n}"],"names":["debounce","func","wait","timeout","debounced","args","later","__name","isMuiElement","element","muiNames","React.isValidElement","useControlled","controlled","defaultProp","name","state","isControlled","React.useRef","valueState","setValue","React.useState","value","setValueIfUncontrolled","React.useCallback","newValue"],"mappings":"6HAEe,SAASA,EAASC,EAAMC,EAAO,IAAK,CACjD,IAAIC,EAEJ,SAASC,KAAaC,EAAM,CAC1B,MAAMC,EAAQC,EAAA,IAAM,CAClBN,EAAK,MAAM,KAAMI,CAAI,CAC3B,EAFkB,SAId,aAAaF,CAAO,EACpBA,EAAU,WAAWG,EAAOJ,CAAI,CACjC,CAPQ,OAAAK,EAAAH,EAAA,aASTA,EAAU,MAAQ,IAAM,CACtB,aAAaD,CAAO,CACxB,EAESC,CACT,CAjBwBG,EAAAP,EAAA,YCDT,SAASQ,EAAaC,EAASC,EAAU,CACtD,OAAoBC,EAAoB,QAAA,eAACF,CAAO,GAAKC,EAAS,QAAQD,EAAQ,KAAK,OAAO,IAAM,EAClG,CAFwBF,EAAAC,EAAA,gBCCT,SAASI,EAAc,CACpC,WAAAC,EACA,QAASC,EACT,KAAAC,EACA,MAAAC,EAAQ,OACV,EAAG,CAED,KAAM,CACJ,QAASC,CACb,EAAMC,EAAY,QAAA,OAACL,IAAe,MAAS,EACnC,CAACM,EAAYC,CAAQ,EAAIC,EAAc,QAAA,SAACP,CAAW,EACnDQ,EAAQL,EAAeJ,EAAaM,EAkBpCI,EAAyBC,EAAiB,QAAA,YAACC,GAAY,CACtDR,GACHG,EAASK,CAAQ,CAEpB,EAAE,CAAE,CAAA,EACL,MAAO,CAACH,EAAOC,CAAsB,CACvC,CAnCwBhB,EAAAK,EAAA"}